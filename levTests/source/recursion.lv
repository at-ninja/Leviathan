#####################
# Recursion Test
# DPL Project
#####################



# in order to recurse in leviathan, you must use a named function
# this is like many well-known languages

var recursiveFactorial = F(n) { if (n < 2) n else n * recursiveFactorial(n - 1) }

println("1! = ", recursiveFactorial(1))
println("2! = ", recursiveFactorial(2))
println("5! = ", recursiveFactorial(5))


# recursive functions can be used for a variety of reasons in leviathan, including creating
# arrays or strings

var createRange = F(n) I n < 1 {[n]} E [n] + createRange(n - 1)

println((createRange)(5))